// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.AI.Personalizer
{
    public partial class ClientConfiguration
    {
        internal static ClientConfiguration DeserializeClientConfiguration(JsonElement element)
        {
            Optional<string> applicationID = default;
            Optional<string> eventHubInteractionConnectionString = default;
            Optional<string> eventHubObservationConnectionString = default;
            Optional<string> modelBlobUri = default;
            Optional<float> initialExplorationEpsilon = default;
            Optional<PersonalizerLearningMode> learningMode = default;
            Optional<string> initialCommandLine = default;
            Optional<int> protocolVersion = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("applicationID"))
                {
                    applicationID = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("eventHubInteractionConnectionString"))
                {
                    eventHubInteractionConnectionString = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("eventHubObservationConnectionString"))
                {
                    eventHubObservationConnectionString = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("modelBlobUri"))
                {
                    modelBlobUri = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("initialExplorationEpsilon"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    initialExplorationEpsilon = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("learningMode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    learningMode = new PersonalizerLearningMode(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("initialCommandLine"))
                {
                    initialCommandLine = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("protocolVersion"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    protocolVersion = property.Value.GetInt32();
                    continue;
                }
            }
            return new ClientConfiguration(applicationID.Value, eventHubInteractionConnectionString.Value, eventHubObservationConnectionString.Value, modelBlobUri.Value, Optional.ToNullable(initialExplorationEpsilon), Optional.ToNullable(learningMode), initialCommandLine.Value, Optional.ToNullable(protocolVersion));
        }
    }
}
